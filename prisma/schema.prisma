generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  uid         String       @id @default(uuid())
  firstname   String
  lastname    String
  phoneNumber String
  password    String
  address     String
  platform    String?      @default("portal")
  accessLevel String?      @default("regular")
  expire      String?      @default("none")
  areaAccess  Int[]
  DeviceLogs  DeviceLogs[]
  Survey      Survey[]
}

model Users {
  uid            String           @id @default(uuid())
  firstname      String
  lastname       String
  phoneNumber    String
  password       String
  address        String
  status         String
  SurveyResponse SurveyResponse[]
  DeviceLogs     DeviceLogs[]
}

model Candidates {
  id               String         @id @default(uuid())
  lastname         String
  firstname        String
  position         String
  code             String
  desc             String
  batch            CandidateBatch @relation(fields: [candidateBatchId], references: [id], onDelete: Cascade)
  candidateBatchId String
}

model CandidateBatch {
  id         String       @id @default(uuid())
  timestamp  DateTime     @default(now())
  Candidates Candidates[]
  waveID     Wave         @relation(fields: [waveId], references: [id], onDelete: Cascade)
  waveId     Int
}

model Wave {
  id             Int              @id @default(autoincrement())
  timestamp      DateTime         @default(now())
  CandidateBatch CandidateBatch[]
}

model Voters {
  id              String         @id @default(uuid())
  lastname        String
  firstname       String
  barangay        Barangays      @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  municipal       Municipals     @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  precent         Precents?      @relation(fields: [precintsId], references: [id], onDelete: Cascade)
  status          Int            @default(1)
  calcAge         Int
  birthYear       String
  level           Int            @default(0)
  barangaysId     String
  municipalsId    Int
  precintsId      String?        @default("Unknown")
  batchDraft      NewBatchDraft? @relation(fields: [newBatchDraftId], references: [id], onDelete: Cascade)
  saveStatus      String         @default("drafted")
  mobileNumber    String?        @default("Unknown")
  houseHold       HouseHold?     @relation(fields: [houseHoldId], references: [id], onDelete: Cascade)
  houseHoldId     String?        @default("Unknown")
  newBatchDraftId String?        @default("Unknown")
  purok           Purok?         @relation(fields: [purokId], references: [id], onDelete: Cascade)
  purokId         String?
  teamLeader      TeamLeader?    @relation(fields: [teamLeaderId], references: [id], onDelete: Cascade)
  teamLeaderId    String?        @default("Unknown")
  hubID           Hub?           @relation(fields: [hubId], references: [id], onDelete: Cascade)
  BarangayCoor    BarangayCoor[]
  PurokCoor       PurokCoor[]
  pwd             String?
  oor             String?
  inc             String?
  illi            String?
  inPurok         Boolean?
  hubId           String?        @default("Unknown")
  qrCode          String?
}

model Purok {
  id           String      @id @default(cuid())
  purokNumber  String
  barangaysId  String
  barangay     Barangays   @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  municipalsId Int
  municipal    Municipals  @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  houseHolds   HouseHold[]
  voters       Voters[]
  draftID      String
}

model Municipals {
  id                 Int                  @id
  name               String
  barangays          Barangays[]
  voters             Voters[]
  Precents           Precents[]
  NewBatchDraft      NewBatchDraft[]
  Purok              Purok[]
  HouseHold          HouseHold[]
  Hub                Hub[]
  PurokCoor          PurokCoor[]
  BarangayCoor       BarangayCoor[]
  SurveyResponse     SurveyResponse[]
  Response           Response[]
  RespondentResponse RespondentResponse[]
}

model Barangays {
  id                 String               @id @default(uuid())
  name               String
  municipal          Municipals           @relation(fields: [municipalId], references: [id], onDelete: Cascade)
  municipalId        Int
  voters             Voters[]
  precents           Precents[]
  NewBatchDraft      NewBatchDraft[]
  Purok              Purok[]
  HouseHold          HouseHold[]
  Hub                Hub[]
  PurokCoor          PurokCoor[]
  BarangayCoor       BarangayCoor[]
  Response           Response[]
  SurveyResponse     SurveyResponse[]
  population         Int?                 @default(0)
  sampleSize         Int?                 @default(0)
  sampleRate         Int?                 @default(10)
  surveyor           Int?                 @default(0)
  femaleSize         Int?                 @default(0)
  maleSize           Int?                 @default(0)
  activeSurveyor     Int?                 @default(0)
  RespondentResponse RespondentResponse[]
  Quota              Quota[]
}

model HouseHold {
  id              String     @id
  houseHoldNumber String
  barangayId      Barangays  @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId     String
  municipalId     Municipals @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  municipalsId    Int
  Voters          Voters[]
  purokID         Purok      @relation(fields: [purokId], references: [id], onDelete: Cascade)
  purokId         String
}

model Hub {
  id           String     @id @default(cuid())
  barangayID   Barangays  @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId  String
  municipalId  Municipals @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  municipalsId Int
  teamLeader   TeamLeader @relation(fields: [teamLeaderId], references: [id], onDelete: Cascade)
  teamLeaderId String
  Voters       Voters[]
}

model Precents {
  id            String     @id
  precintNumber String
  barangay      Barangays  @relation(fields: [barangayId], references: [id], onDelete: Cascade)
  barangayId    String
  municipal     Municipals @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  Voters        Voters[]
  municipalsId  Int
}

model NewBatchDraft {
  id          String      @id @default(uuid())
  Municipals  Municipals? @relation(fields: [municipalId], references: [id], onDelete: Cascade)
  municipalId Int?
  barangay    Barangays   @relation(fields: [barangayId], references: [id], onDelete: Cascade)
  barangayId  String
  timestamp   DateTime    @default(now())
  Voters      Voters[]
}

model CutstomList {
  id          String   @id @default(uuid())
  name        String
  wave        String
  municipalId Int
  barangayId  String
  timestamp   DateTime @default(now())
}

model TeamLeader {
  id          String    @id @default(cuid())
  Voters      Voters[]
  hubId       String
  purokCoor   PurokCoor @relation(fields: [purokCoorId], references: [id], onDelete: Cascade)
  purokCoorId String
  voterId     String
  Hub         Hub[]
}

model PurokCoor {
  id             String       @id @default(cuid())
  voter          Voters       @relation(fields: [votersId], references: [id], onDelete: Cascade)
  municipalId    Municipals   @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  municipalsId   Int
  barangayId     Barangays    @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId    String
  TeamLeader     TeamLeader[]
  barangayCoor   BarangayCoor @relation(fields: [barangayCoorId], references: [id], onDelete: Cascade)
  barangayCoorId String
  votersId       String
}

model BarangayCoor {
  id           String      @id @default(cuid())
  voter        Voters      @relation(fields: [votersId], references: [id], onDelete: Cascade)
  purokCoor    PurokCoor[]
  municipalID  Municipals  @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  municipalsId Int
  barangayID   Barangays   @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId  String
  votersId     String
}

model Survey {
  id                 String               @id @default(cuid())
  tagID              String
  name               String               @default("Title_")
  timestamp          DateTime             @default(now())
  type               String
  queries            Queries[]
  drafted            Boolean?             @default(true)
  status             String?              @default("Ongoing")
  createdBy          AdminUser            @relation(fields: [adminUserUid], references: [uid], onDelete: Cascade)
  images             MediaUrl[]
  adminUserUid       String
  DeviceLogs         DeviceLogs[]
  Response           Response[]
  RespondentResponse RespondentResponse[]
  SurveyResponse     SurveyResponse[]
}

model SampleSize {
  id   String @id @default(cuid())
  size Int
  rate Int
}

model DefaultQuery {
  id        String @id @default(cuid())
  queriesId String
}

model AgeBracket {
  id                 String               @id @default(cuid())
  segment            String
  order              Int                  @default(autoincrement())
  Response           Response[]
  RespondentResponse RespondentResponse[]
  Quota              Quota[]
}

model Gender {
  id                 String               @id @default(cuid())
  name               String
  Response           Response[]
  RespondentResponse RespondentResponse[]
  GenderSize         GenderSize[]
  GenderTotal        GenderTotal[]
}

model GenderTotal {
  id       String @id @default(cuid())
  total    Int?   @default(0)
  gender   Gender @relation(fields: [genderId], references: [id], onDelete: Cascade)
  genderId String
}

model GenderSize {
  id       String  @id @default(cuid())
  gender   Gender  @relation(fields: [genderId], references: [id], onDelete: Cascade)
  genderId String
  size     Int
  Quota    Quota?  @relation(fields: [quotaId], references: [id], onDelete: Cascade)
  quotaId  String?
}

model Quota {
  id             String       @id @default(uuid())
  barangay       Barangays    @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId    String
  gendersSize    GenderSize[]
  age            AgeBracket   @relation(fields: [ageBracketId], references: [id], onDelete: Cascade)
  activeSurveyor Int?         @default(0)
  ageBracketId   String
}

model Queries {
  id            String        @id @default(uuid())
  order         Int           @default(autoincrement())
  queries       String
  survey        Survey        @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  surveyId      String
  type          String?       @default("single")
  componentType String?       @default("regular")
  responseType  String?       @default("multiple")
  selectionType String?       @default("select")
  access        String?       @default("regular")
  Response      Response[]
  Option        Option[]
  QueryAnswer   QueryAnswer[]
  onTop         Boolean?      @default(false)
}

model Option {
  id          String        @id @default(cuid())
  order       Int           @default(autoincrement())
  title       String?
  desc        String?
  mediaUrlId  String?
  queries     Queries       @relation(fields: [queryId], references: [id], onDelete: Cascade)
  queryId     String
  onExit      Boolean       @default(false)
  onTop       Boolean?       @default(false)
  inlcuded    Boolean?       @default(false)
  Response    Response[]
  MediaUrl    MediaUrl[]
  QueryAnswer QueryAnswer[]
}

model MediaUrl {
  id       String  @id @default(uuid())
  url      String
  filename String?
  size     String
  option   Option? @relation(fields: [optionId], references: [id], onDelete: Cascade)
  Survey   Survey? @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  surveyId String?
  optionId String?
}

model SurveyResponse {
  id                 String               @id
  timestamp          DateTime             @default(now())
  municipal          Municipals           @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  municipalsId       Int
  barangay           Barangays            @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId        String
  survey             Survey               @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  Users              Users?               @relation(fields: [usersUid], references: [uid], onDelete: Cascade)
  usersUid           String?
  surveyId           String
  RespondentResponse RespondentResponse[]
  Response           Response[]
}

model RespondentResponse {
  id               String         @id
  age              AgeBracket     @relation(fields: [ageBracketId], references: [id], onDelete: Cascade)
  ageBracketId     String
  gender           Gender         @relation(fields: [genderId], references: [id], onDelete: Cascade)
  genderId         String
  municipal        Municipals     @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  municipalsId     Int
  barangay         Barangays      @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId      String
  survey           Survey         @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  surveyId         String
  Response         Response[]
  surveyResponse   SurveyResponse @relation(fields: [surveyResponseId], references: [id], onDelete: Cascade)
  surveyResponseId String
}

model Response {
  id                   String             @id
  survey               Survey             @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  queries              Queries            @relation(fields: [queryId], references: [id], onDelete: Cascade)
  queryId              String
  barangay             Barangays          @relation(fields: [barangaysId], references: [id], onDelete: Cascade)
  barangaysId          String
  municipal            Municipals         @relation(fields: [municipalsId], references: [id], onDelete: Cascade)
  option               Option             @relation(fields: [optionId], references: [id], onDelete: Cascade)
  optionId             String
  ageBracket           AgeBracket         @relation(fields: [ageBracketId], references: [id], onDelete: Cascade)
  ageBracketId         String
  gender               Gender             @relation(fields: [genderId], references: [id], onDelete: Cascade)
  genderId             String
  municipalsId         Int
  surveyId             String
  surveyResponse       SurveyResponse     @relation(fields: [surveyResponseId], references: [id], onDelete: Cascade)
  respondentResponse   RespondentResponse @relation(fields: [respondentResponseId], references: [id], onDelete: Cascade)
  respondentResponseId String
  surveyResponseId     String
  QueryAnswer          QueryAnswer[]
}

model QueryAnswer {
  id         String   @id
  query      Queries  @relation(fields: [queriesId], references: [id], onDelete: Cascade)
  queriesId  String
  option     Option   @relation(fields: [optionId], references: [id], onDelete: Cascade)
  optionId   String
  response   Response @relation(fields: [responseId], references: [id], onDelete: Cascade)
  responseId String
}

model DeviceLogs {
  id           String    @id @default(cuid())
  release      String    @default("-/-")
  return       String    @default("-/-")
  user         Users     @relation(fields: [usersUid], references: [uid], onDelete: Cascade)
  usersUid     String
  condition    String    @default("New")
  handTo       AdminUser @relation(fields: [adminUserUid], references: [uid], onDelete: Cascade)
  adminUserUid String
  survey       Survey    @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  surveyId     String
}
